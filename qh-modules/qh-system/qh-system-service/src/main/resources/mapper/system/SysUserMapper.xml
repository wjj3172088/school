<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qh.system.mapper.SysUserMapper">

    <resultMap type="SysUser" id="SysUserResult">
        <id property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="email" column="email"/>
        <result property="phonenumber" column="phonenumber"/>
        <result property="sex" column="sex"/>
        <result property="avatar" column="avatar"/>
        <result property="password" column="password"/>
        <result property="status" column="status"/>
        <result property="loginIp" column="login_ip"/>
        <result property="loginDate" column="login_date"/>
        <result property="createBy" column="create_by"/>
        <result property="orgId" column="org_id"/>
        <result property="orgName" column="org_name"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
        <collection property="roles" javaType="java.util.List" resultMap="RoleResult"/>
    </resultMap>

    <resultMap id="deptResult" type="SysDept">
        <result property="parentId" column="parent_id"/>
        <result property="deptName" column="dept_name"/>
        <result property="orderNum" column="order_num"/>
        <result property="leader" column="leader"/>
        <result property="status" column="dept_status"/>
    </resultMap>

    <resultMap id="RoleResult" type="SysRole">
        <id property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleKey" column="role_key"/>
        <result property="roleSort" column="role_sort"/>
        <result property="dataScope" column="data_scope"/>
        <result property="status" column="role_status"/>
    </resultMap>

    <sql id="selectUserVo">
        select u.user_id, u.user_name, u.nick_name, u.email, u.avatar, u.phonenumber, u.password, u.sex,
        u.status, u.login_ip, u.login_date, u.create_by,u.org_id,u.org_name, u.create_time, u.remark,
        r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status
        from t_basic_sys_user u
		    left join t_basic_sys_user_role ur on u.user_id = ur.user_id
		    left join t_basic_sys_role r on r.role_id = ur.role_id
    </sql>

    <!--后期废弃 ****************************** start ***********************************-->
    <select id="selectUserListByPage" parameterType="SysUser" resultMap="SysUserResult">
        select user_id, nick_name, user_name, email, avatar, phonenumber, password, sex, status, login_ip,
        login_date, create_by, create_time, remark,org_id,org_name from t_basic_sys_user u
        where 1=1
        <if test="sysUser.userName != null and sysUser.userName != ''">
            AND u.user_name like concat('%', #{sysUser.userName}, '%')
        </if>
        <if test="sysUser.status != null and sysUser.status != ''">
            AND u.status = #{sysUser.status}
        </if>
        <if test="sysUser.orgId != null and sysUser.orgId != ''">
            AND u.org_id = #{sysUser.orgId}
        </if>
        <if test="sysUser.phonenumber != null and sysUser.phonenumber != ''">
            AND u.phonenumber like concat('%', #{sysUser.phonenumber}, '%')
        </if>
        <if test="sysUser.beginTime != null and sysUser.beginTime != ''"><!-- 开始时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{sysUser.beginTime},'%y%m%d')
        </if>
        <if test="sysUser.endTime != null and sysUser.endTime != ''"><!-- 结束时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{sysUser.endTime},'%y%m%d')
        </if>
        <!-- 数据范围过滤 -->
        ${sysUser.params.dataScope}
    </select>

    <select id="selectUserListAll" parameterType="SysUser" resultMap="SysUserResult">
        select u.user_id, u.nick_name, u.user_name, u.email, u.avatar, u.phonenumber, u.password, u.sex,
        u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark from t_basic_sys_user u
        where 1=1
        <if test="userName != null and userName != ''">
            AND u.user_name like concat('%', #{userName}, '%')
        </if>
        <if test="status != null and status != ''">
            AND u.status = #{status}
        </if>
        <if test="phonenumber != null and phonenumber != ''">
            AND u.phonenumber like concat('%', #{phonenumber}, '%')
        </if>
        <if test="beginTime != null and beginTime != ''"><!-- 开始时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{beginTime},'%y%m%d')
        </if>
        <if test="endTime != null and endTime != ''"><!-- 结束时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{endTime},'%y%m%d')
        </if>
        <if test="orgId != null and orgId != ''">
            AND u.org_id = #{orgId}
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
    </select>
    <!--后期废弃 ****************************** end ***********************************-->

    <select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.user_name = #{userName}
    </select>

    <select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.user_id = #{userId}
    </select>

    <select id="checkUserNameUnique" parameterType="String" resultType="int">
		select count(1) from t_basic_sys_user where user_name = #{userName} limit 1
	</select>

    <select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, phonenumber from t_basic_sys_user where phonenumber = #{phonenumber} limit 1
	</select>

    <select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, email from t_basic_sys_user where email = #{email} limit 1
	</select>

    <update id="updateUserStatus" parameterType="SysUser">
 		update t_basic_sys_user set status = #{status} where user_id = #{userId}
	</update>

    <update id="updateUserAvatar" parameterType="SysUser">
 		update t_basic_sys_user set avatar = #{avatar} where user_name = #{userName}
	</update>

    <update id="resetUserPwd" parameterType="SysUser">
 		update t_basic_sys_user set password = #{password} where user_name = #{userName}
	</update>

    <delete id="deleteUserById" parameterType="Long">
 		delete from t_basic_sys_user where user_id = #{userId}
 	</delete>

    <update id="updateUserById" parameterType="com.qh.system.api.domain.SysUser">
        update t_basic_sys_user
        <set>
            <if test="sysUser.userName != null and sysUser.userName != ''">
                user_name = #{sysUser.userName},
            </if>
            <if test="sysUser.nickName != null and sysUser.nickName != ''">
                nick_name = #{sysUser.nickName},
            </if>
            <if test="sysUser.orgId != null and sysUser.orgId != ''">
                org_id = #{sysUser.orgId},
            </if>
            <if test="sysUser.orgName != null and sysUser.orgName != ''">
                org_name = #{sysUser.orgName},
            </if>
            <if test="sysUser.phonenumber != null and sysUser.phonenumber != ''">
                phonenumber = #{sysUser.phonenumber},
            </if>
            <if test="sysUser.email != null and sysUser.email != ''">
                email = #{sysUser.email},
            </if>
            <if test="sysUser.sex != null">
                sex = #{sysUser.sex},
            </if>
            <if test="sysUser.status != null">
                status = #{sysUser.status},
            </if>
            <if test="sysUser.remark != null and sysUser.remark != ''">
                remark = #{sysUser.remark},
            </if>
            <if test="sysUser.updateTime != null">
                update_time= #{sysUser.updateTime},
            </if>
        </set>
        where user_id = #{sysUser.userId}
    </update>
</mapper> 